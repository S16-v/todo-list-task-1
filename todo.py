# -*- coding: utf-8 -*-
"""todo.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Lzh8L1SOzjy7s05hsQ_7pzKq9q-AAMZr
"""

import json
import os
from datetime import datetime

# Function to load tasks from file

def load_tasks():
    if os.path.exists('tasks.json'):
        with open('tasks.json', 'r') as file:
            return json.load(file)
    else:
        return []

# Function to save tasks to file
# Arg: tasks

def save_tasks(tasks):
    with open('tasks.json', 'w') as file:
        json.dump(tasks, file)

# Function to add a new task
# Arg: tasks

def add_task(tasks):
    task_name = input("Enter task name: ")
    priority = input("Enter priority (high/medium/low): ")
    due_date = input("Enter due date (YYYY-MM-DD): ")

    tasks.append({
        'name': task_name,
        'priority': priority,
        'due_date': due_date,
        'completed': False
    })
    save_tasks(tasks)
    print("Task added successfully.")

# Function to remove a task
# Arg: tasks

def remove_task(tasks):
    if not tasks:
        print("No tasks to remove.")
        return

    print("Select task to remove:")
    for i, task in enumerate(tasks):
        print(f"{i+1}. {task['name']}")

    choice = int(input("Enter task number to remove: ")) - 1

    if 0 <= choice < len(tasks):
        del tasks[choice]
        save_tasks(tasks)
        print("Task removed successfully.")
    else:
        print("Invalid task number.")

# Function to mark a task as completed
# Arg: tasks

def complete_task(tasks):
    if not tasks:
        print("No tasks to mark as completed.")
        return

    print("Select task to mark as completed:")
    for i, task in enumerate(tasks):
        if not task['completed']:
            print(f"{i+1}. {task['name']}")

    choice = int(input("Enter task number to mark as completed: ")) - 1

    if 0 <= choice < len(tasks):
        tasks[choice]['completed'] = True
        save_tasks(tasks)
        print("Task marked as completed successfully.")
    else:
        print("Invalid task number.")

# Function to display all tasks
# Arg: tasks

def list_tasks(tasks):
    if not tasks:
        print("No tasks.")
        return

    print("\nTask List:")
    for i, task in enumerate(tasks):
        print(f"{i+1}. {task['name']} - Priority: {task['priority']}, Due Date: {task['due_date']}, Completed: {task['completed']}")

# Main function

def main():
    tasks = load_tasks()

    while True:
        print("\n*******TODO LIST*******\n1. Add Task\n2. Remove Task\n3. Complete Task\n4. List Tasks\n5. Exit")

        choice = input("Enter your choice: ")

        if choice == '1':
            add_task(tasks)
        elif choice == '2':
            remove_task(tasks)
        elif choice == '3':
            complete_task(tasks)
        elif choice == '4':
            list_tasks(tasks)
        elif choice == '5':
            print("Exiting...")
            break
        else:
            print("Invalid choice.")

if __name__ == "__main__":
    main()

